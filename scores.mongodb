// Select the database to use.
use('students');

// Insert a few documents into the scores collection.
db.scores.insertMany([
    {"name":"Ramesh","subject":"maths","marks":87}, 
    {"name":"Ramesh","subject":"english","marks":59}, 
    {"name":"Ramesh","subject":"science","marks":77}, 
    {"name":"Rav","subject":"maths","marks":62}, 
    {"name":"Rav","subject":"english","marks":83}, 
    {"name":"Rav","subject":"science","marks":71}, 
    {"name":"Alison","subject":"maths","marks":84}, 
    {"name":"Alison","subject":"english","marks":82},
    {"name":"Alison","subject":"science","marks":86}, 
    {"name":"Steve","subject":"maths","marks":81},
    {"name":"Steve","subject":"english","marks":89}, 
    {"name":"Steve","subject":"science","marks":77},
    {"name":"Jan","subject":"english","marks":0,"reason":"absent"}

]);

// Find the total marks for each student across all subjects. 
db.scores.aggregate([
    {$group:{_id:"$name", "total marks":{$sum:"$marks"}}}])

// Find the maximum marks scored in each subject. 
db.scores.aggregate([
  {$group:{_id:"$subject", "scores":{$max:"$marks"}}}])

// Find the minimum marks scored by each student. 
db.scores.aggregate([{$group:{_id:"$name", "scores":{$min:"$marks"}}}])

// Find the top two subjects based on average marks.
db.scores.aggregate([
  {$group:{_id:"$subject", "average marks":{$avg:"$marks"}}}, 
  {$sort:{"marks": -1}}, {$limit: 2}])

